//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace WebEOC_API
{
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.1.0")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="urn:com:esi911:webeoc7:api:1.0", ConfigurationName="WebEOC_API.APISoap")]
    public interface APISoap
    {
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:com:esi911:webeoc7:api:1.0/AddAttachment", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(DataTransferObject))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(CustomFilterItem[]))]
        System.Threading.Tasks.Task<WebEOC_API.AddAttachmentResponse> AddAttachmentAsync(WebEOC_API.AddAttachmentRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:com:esi911:webeoc7:api:1.0/RemoveAttachment", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(DataTransferObject))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(CustomFilterItem[]))]
        System.Threading.Tasks.Task RemoveAttachmentAsync(WebEOC_API.WebEOCCredentials credentials, string BoardName, string InputViewName, string AttachmentFieldName, int DataId);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:com:esi911:webeoc7:api:1.0/GetPositions", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(DataTransferObject))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(CustomFilterItem[]))]
        System.Threading.Tasks.Task<string[]> GetPositionsAsync(WebEOC_API.WebEOCCredentials credentials);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:com:esi911:webeoc7:api:1.0/GetUserPositions", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(DataTransferObject))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(CustomFilterItem[]))]
        System.Threading.Tasks.Task<string[]> GetUserPositionsAsync(WebEOC_API.WebEOCCredentials credentials);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:com:esi911:webeoc7:api:1.0/GetUsersByPosition", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(DataTransferObject))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(CustomFilterItem[]))]
        System.Threading.Tasks.Task<WebEOC_API.WebEOCUser[]> GetUsersByPositionAsync(WebEOC_API.WebEOCCredentials credentials, string PositionName);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:com:esi911:webeoc7:api:1.0/GetPositionsForUser", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(DataTransferObject))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(CustomFilterItem[]))]
        System.Threading.Tasks.Task<string[]> GetPositionsForUserAsync(WebEOC_API.WebEOCCredentials credentials, string UserName);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:com:esi911:webeoc7:api:1.0/AddUser", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(DataTransferObject))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(CustomFilterItem[]))]
        System.Threading.Tasks.Task AddUserAsync(WebEOC_API.WebEOCCredentials credentials, WebEOC_API.WebEOCUser UserToAdd, string Password);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:com:esi911:webeoc7:api:1.0/AddUserToPosition", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(DataTransferObject))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(CustomFilterItem[]))]
        System.Threading.Tasks.Task AddUserToPositionAsync(WebEOC_API.WebEOCCredentials credentials, string UserName, string Position);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:com:esi911:webeoc7:api:1.0/RemoveUserFromPosition", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(DataTransferObject))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(CustomFilterItem[]))]
        System.Threading.Tasks.Task RemoveUserFromPositionAsync(WebEOC_API.WebEOCCredentials credentials, string UserName, string Position);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:com:esi911:webeoc7:api:1.0/DeleteUserIfNoPositions", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(DataTransferObject))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(CustomFilterItem[]))]
        System.Threading.Tasks.Task<bool> DeleteUserIfNoPositionsAsync(WebEOC_API.WebEOCCredentials credentials, string UserName);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:com:esi911:webeoc7:api:1.0/DeleteUser", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(DataTransferObject))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(CustomFilterItem[]))]
        System.Threading.Tasks.Task DeleteUserAsync(WebEOC_API.WebEOCCredentials credentials, string UserName);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:com:esi911:webeoc7:api:1.0/GetBoardNames", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(DataTransferObject))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(CustomFilterItem[]))]
        System.Threading.Tasks.Task<string[]> GetBoardNamesAsync(WebEOC_API.WebEOCCredentials credentials);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:com:esi911:webeoc7:api:1.0/GetInputViews", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(DataTransferObject))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(CustomFilterItem[]))]
        System.Threading.Tasks.Task<string[]> GetInputViewsAsync(WebEOC_API.WebEOCCredentials credentials, string BoardName);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:com:esi911:webeoc7:api:1.0/GetDisplayViews", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(DataTransferObject))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(CustomFilterItem[]))]
        System.Threading.Tasks.Task<string[]> GetDisplayViewsAsync(WebEOC_API.WebEOCCredentials credentials, string BoardName);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:com:esi911:webeoc7:api:1.0/GetMobileForms", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(DataTransferObject))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(CustomFilterItem[]))]
        System.Threading.Tasks.Task<WebEOC_API.MobileForm[]> GetMobileFormsAsync(WebEOC_API.WebEOCCredentials credentials);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:com:esi911:webeoc7:api:1.0/GetViewFields", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(DataTransferObject))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(CustomFilterItem[]))]
        System.Threading.Tasks.Task<string[]> GetViewFieldsAsync(WebEOC_API.WebEOCCredentials credentials, string BoardName, string ViewName);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:com:esi911:webeoc7:api:1.0/GetUserNames", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(DataTransferObject))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(CustomFilterItem[]))]
        System.Threading.Tasks.Task<string[]> GetUserNamesAsync(WebEOC_API.WebEOCCredentials credentials);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:com:esi911:webeoc7:api:1.0/GetUser", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(DataTransferObject))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(CustomFilterItem[]))]
        System.Threading.Tasks.Task<WebEOC_API.WebEOCUser> GetUserAsync(WebEOC_API.WebEOCCredentials credentials, string userName);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:com:esi911:webeoc7:api:1.0/EditUser", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(DataTransferObject))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(CustomFilterItem[]))]
        System.Threading.Tasks.Task EditUserAsync(WebEOC_API.WebEOCCredentials credentials, WebEOC_API.WebEOCUser webeocUser);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:com:esi911:webeoc7:api:1.0/LockUnlockUser", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(DataTransferObject))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(CustomFilterItem[]))]
        System.Threading.Tasks.Task LockUnlockUserAsync(WebEOC_API.WebEOCCredentials credentials, string username, bool locked);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:com:esi911:webeoc7:api:1.0/GetGroupNames", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(DataTransferObject))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(CustomFilterItem[]))]
        System.Threading.Tasks.Task<string[]> GetGroupNamesAsync(WebEOC_API.WebEOCCredentials credentials);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:com:esi911:webeoc7:api:1.0/GetGroup", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(DataTransferObject))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(CustomFilterItem[]))]
        System.Threading.Tasks.Task<WebEOC_API.WebEOCGroup> GetGroupAsync(WebEOC_API.WebEOCCredentials credentials, string groupName);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:com:esi911:webeoc7:api:1.0/AddGroup", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(DataTransferObject))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(CustomFilterItem[]))]
        System.Threading.Tasks.Task AddGroupAsync(WebEOC_API.WebEOCCredentials credentials, WebEOC_API.WebEOCGroup groupToAdd);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:com:esi911:webeoc7:api:1.0/EditGroup", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(DataTransferObject))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(CustomFilterItem[]))]
        System.Threading.Tasks.Task EditGroupAsync(WebEOC_API.WebEOCCredentials credentials, WebEOC_API.WebEOCGroup groupToEdit);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:com:esi911:webeoc7:api:1.0/DeleteGroup", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(DataTransferObject))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(CustomFilterItem[]))]
        System.Threading.Tasks.Task DeleteGroupAsync(WebEOC_API.WebEOCCredentials credentials, string groupNameToDelete);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:com:esi911:webeoc7:api:1.0/AddData", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(DataTransferObject))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(CustomFilterItem[]))]
        System.Threading.Tasks.Task<int> AddDataAsync(WebEOC_API.WebEOCCredentials credentials, string BoardName, string InputViewName, string XmlData);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:com:esi911:webeoc7:api:1.0/UpdateData", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(DataTransferObject))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(CustomFilterItem[]))]
        System.Threading.Tasks.Task<int> UpdateDataAsync(WebEOC_API.WebEOCCredentials credentials, string BoardName, string InputViewName, string XmlData, int DataId);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:com:esi911:webeoc7:api:1.0/UpdateDataBatch", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(DataTransferObject))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(CustomFilterItem[]))]
        System.Threading.Tasks.Task<int[]> UpdateDataBatchAsync(WebEOC_API.WebEOCCredentials credentials, string BoardName, string InputViewName, string XmlData);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:com:esi911:webeoc7:api:1.0/AddRelatedData", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(DataTransferObject))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(CustomFilterItem[]))]
        System.Threading.Tasks.Task<int> AddRelatedDataAsync(WebEOC_API.WebEOCCredentials credentials, string BoardName, string InputViewName, string XmlData, string RelatedTable, int RelatedDataId);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:com:esi911:webeoc7:api:1.0/UpdateRelatedData", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(DataTransferObject))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(CustomFilterItem[]))]
        System.Threading.Tasks.Task<int> UpdateRelatedDataAsync(WebEOC_API.WebEOCCredentials credentials, string BoardName, string InputViewName, string XmlData, string RelatedTable, int RelatedDataId, int DataId);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:com:esi911:webeoc7:api:1.0/GetAttachment", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(DataTransferObject))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(CustomFilterItem[]))]
        System.Threading.Tasks.Task<WebEOC_API.FileAttachment> GetAttachmentAsync(WebEOC_API.WebEOCCredentials credentials, string boardName, string displayViewName, string attachmentFieldName, int dataId);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:com:esi911:webeoc7:api:1.0/GetData", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(DataTransferObject))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(CustomFilterItem[]))]
        System.Threading.Tasks.Task<string> GetDataAsync(WebEOC_API.WebEOCCredentials credentials, string BoardName, string DisplayViewName);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:com:esi911:webeoc7:api:1.0/GetFilteredData", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(DataTransferObject))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(CustomFilterItem[]))]
        System.Threading.Tasks.Task<string> GetFilteredDataAsync(WebEOC_API.WebEOCCredentials credentials, string BoardName, string DisplayViewName, string[] ViewFilterNames, string XmlUserFilter);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:com:esi911:webeoc7:api:1.0/GetFilteredDataV2", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(DataTransferObject))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(CustomFilterItem[]))]
        System.Threading.Tasks.Task<string> GetFilteredDataV2Async(WebEOC_API.WebEOCCredentials credentials, string BoardName, string DisplayViewName, string[] ViewFilterNames, string XmlUserFilter, WebEOC_API.CustomFilter CustomFilter);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:com:esi911:webeoc7:api:1.0/GetUpdatedData", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(DataTransferObject))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(CustomFilterItem[]))]
        System.Threading.Tasks.Task<string> GetUpdatedDataAsync(WebEOC_API.WebEOCCredentials credentials, string BoardName, string DisplayViewName, System.DateTime UpdatedTime);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:com:esi911:webeoc7:api:1.0/GetDataByDataId", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(DataTransferObject))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(CustomFilterItem[]))]
        System.Threading.Tasks.Task<string> GetDataByDataIdAsync(WebEOC_API.WebEOCCredentials credentials, string BoardName, string DisplayViewName, int DataId);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:com:esi911:webeoc7:api:1.0/Ping", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(DataTransferObject))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(CustomFilterItem[]))]
        System.Threading.Tasks.Task<string> PingAsync(WebEOC_API.WebEOCCredentials credentials);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:com:esi911:webeoc7:api:1.0/PostStandardData", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(DataTransferObject))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(CustomFilterItem[]))]
        System.Threading.Tasks.Task PostStandardDataAsync(WebEOC_API.WebEOCCredentials credentials, string XmlStandardData);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:com:esi911:webeoc7:api:1.0/GetIncidents", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(DataTransferObject))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(CustomFilterItem[]))]
        System.Threading.Tasks.Task<string[]> GetIncidentsAsync(WebEOC_API.WebEOCCredentials credentials);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:com:esi911:webeoc7:api:1.0/AddIncident", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(DataTransferObject))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(CustomFilterItem[]))]
        System.Threading.Tasks.Task AddIncidentAsync(WebEOC_API.WebEOCCredentials credentials, string IncidentName, System.DateTime IncidentDateTime, bool Default);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:com:esi911:webeoc7:api:1.0/GetLists", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(DataTransferObject))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(CustomFilterItem[]))]
        System.Threading.Tasks.Task<WebEOC_API.GetListsResponseGetListsResult> GetListsAsync(WebEOC_API.WebEOCCredentials credentials);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:com:esi911:webeoc7:api:1.0/GetListItems", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(DataTransferObject))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(CustomFilterItem[]))]
        System.Threading.Tasks.Task<WebEOC_API.GetListItemsResponseGetListItemsResult> GetListItemsAsync(WebEOC_API.WebEOCCredentials credentials, int listId);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:com:esi911:webeoc7:api:1.0/GetListItemsByListName", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(DataTransferObject))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(CustomFilterItem[]))]
        System.Threading.Tasks.Task<WebEOC_API.GetListItemsByListNameResponseGetListItemsByListNameResult> GetListItemsByListNameAsync(WebEOC_API.WebEOCCredentials credentials, string listName);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:com:esi911:webeoc7:api:1.0/SaveList", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(DataTransferObject))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(CustomFilterItem[]))]
        System.Threading.Tasks.Task<int> SaveListAsync(WebEOC_API.WebEOCCredentials credentials, int listId, string listName);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:com:esi911:webeoc7:api:1.0/DeleteList", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(DataTransferObject))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(CustomFilterItem[]))]
        System.Threading.Tasks.Task DeleteListAsync(WebEOC_API.WebEOCCredentials credentials, int listId);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:com:esi911:webeoc7:api:1.0/SaveListItem", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(DataTransferObject))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(CustomFilterItem[]))]
        System.Threading.Tasks.Task<int> SaveListItemAsync(WebEOC_API.WebEOCCredentials credentials, int listId, int listItemId, string listItemName, string listItemColor);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:com:esi911:webeoc7:api:1.0/DeleteListItem", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(DataTransferObject))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(CustomFilterItem[]))]
        System.Threading.Tasks.Task DeleteListItemAsync(WebEOC_API.WebEOCCredentials credentials, int listItemId);
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.1.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:com:esi911:webeoc7:api:1.0")]
    public partial class WebEOCCredentials
    {
        
        private string usernameField;
        
        private string passwordField;
        
        private string positionField;
        
        private string incidentField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public string Username
        {
            get
            {
                return this.usernameField;
            }
            set
            {
                this.usernameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public string Password
        {
            get
            {
                return this.passwordField;
            }
            set
            {
                this.passwordField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public string Position
        {
            get
            {
                return this.positionField;
            }
            set
            {
                this.positionField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=3)]
        public string Incident
        {
            get
            {
                return this.incidentField;
            }
            set
            {
                this.incidentField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.1.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:com:esi911:webeoc7:api:1.0")]
    public partial class CustomFilterItem
    {
        
        private string fieldNameField;
        
        private CustomFilterOperator operatorField;
        
        private object fieldValueField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public string FieldName
        {
            get
            {
                return this.fieldNameField;
            }
            set
            {
                this.fieldNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public CustomFilterOperator Operator
        {
            get
            {
                return this.operatorField;
            }
            set
            {
                this.operatorField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public object FieldValue
        {
            get
            {
                return this.fieldValueField;
            }
            set
            {
                this.fieldValueField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.1.0")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:com:esi911:webeoc7:api:1.0")]
    public enum CustomFilterOperator
    {
        
        /// <remarks/>
        Equal,
        
        /// <remarks/>
        LessThan,
        
        /// <remarks/>
        GreaterThan,
        
        /// <remarks/>
        LessThanOrEqual,
        
        /// <remarks/>
        GreaterThanOrEqual,
        
        /// <remarks/>
        Like,
        
        /// <remarks/>
        Intersects,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.1.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:com:esi911:webeoc7:api:1.0")]
    public partial class CustomFilter
    {
        
        private CustomFilterItem[] customFilterItemsField;
        
        private CustomFilterBoolean customFilterBooleanField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Order=0)]
        public CustomFilterItem[] CustomFilterItems
        {
            get
            {
                return this.customFilterItemsField;
            }
            set
            {
                this.customFilterItemsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public CustomFilterBoolean CustomFilterBoolean
        {
            get
            {
                return this.customFilterBooleanField;
            }
            set
            {
                this.customFilterBooleanField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.1.0")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:com:esi911:webeoc7:api:1.0")]
    public enum CustomFilterBoolean
    {
        
        /// <remarks/>
        And,
        
        /// <remarks/>
        Or,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.1.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:com:esi911:webeoc7:api:1.0")]
    public partial class FileAttachment
    {
        
        private string fileNameField;
        
        private string contentTypeField;
        
        private byte[] fileContentField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public string FileName
        {
            get
            {
                return this.fileNameField;
            }
            set
            {
                this.fileNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public string ContentType
        {
            get
            {
                return this.contentTypeField;
            }
            set
            {
                this.contentTypeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary", Order=2)]
        public byte[] FileContent
        {
            get
            {
                return this.fileContentField;
            }
            set
            {
                this.fileContentField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.1.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:com:esi911:webeoc7:api:1.0")]
    public partial class WebEOCGroup
    {
        
        private string nameField;
        
        private string commentField;
        
        private bool organizationalField;
        
        private string[] assignedPositionsField;
        
        private string[] assignedIncidentsField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public string Name
        {
            get
            {
                return this.nameField;
            }
            set
            {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public string Comment
        {
            get
            {
                return this.commentField;
            }
            set
            {
                this.commentField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public bool Organizational
        {
            get
            {
                return this.organizationalField;
            }
            set
            {
                this.organizationalField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Order=3)]
        public string[] AssignedPositions
        {
            get
            {
                return this.assignedPositionsField;
            }
            set
            {
                this.assignedPositionsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Order=4)]
        public string[] AssignedIncidents
        {
            get
            {
                return this.assignedIncidentsField;
            }
            set
            {
                this.assignedIncidentsField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(MobileForm))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.1.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:com:esi911:webeoc7:api:1.0")]
    public abstract partial class DataTransferObject
    {
        
        private int idField;
        
        private string nameField;
        
        private System.Guid uIDField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public int ID
        {
            get
            {
                return this.idField;
            }
            set
            {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public string Name
        {
            get
            {
                return this.nameField;
            }
            set
            {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public System.Guid UID
        {
            get
            {
                return this.uIDField;
            }
            set
            {
                this.uIDField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.1.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:com:esi911:webeoc7:api:1.0")]
    public partial class MobileForm : DataTransferObject
    {
        
        private string boardNameField;
        
        private string viewNameField;
        
        private string markUpField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public string BoardName
        {
            get
            {
                return this.boardNameField;
            }
            set
            {
                this.boardNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public string ViewName
        {
            get
            {
                return this.viewNameField;
            }
            set
            {
                this.viewNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public string MarkUp
        {
            get
            {
                return this.markUpField;
            }
            set
            {
                this.markUpField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.1.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:com:esi911:webeoc7:api:1.0")]
    public partial class WebEOCUser
    {
        
        private string usernameField;
        
        private string passwordField;
        
        private bool isAdministratorField;
        
        private bool isMultipleUserLoginField;
        
        private bool isAccountDisabledField;
        
        private bool changePasswordAtNextLoginField;
        
        private bool isDualCommitUserField;
        
        private string primaryEmailField;
        
        private string colorField;
        
        private System.Nullable<bool> allowInactivityExpirationField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public string Username
        {
            get
            {
                return this.usernameField;
            }
            set
            {
                this.usernameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public string Password
        {
            get
            {
                return this.passwordField;
            }
            set
            {
                this.passwordField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public bool IsAdministrator
        {
            get
            {
                return this.isAdministratorField;
            }
            set
            {
                this.isAdministratorField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=3)]
        public bool IsMultipleUserLogin
        {
            get
            {
                return this.isMultipleUserLoginField;
            }
            set
            {
                this.isMultipleUserLoginField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=4)]
        public bool IsAccountDisabled
        {
            get
            {
                return this.isAccountDisabledField;
            }
            set
            {
                this.isAccountDisabledField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=5)]
        public bool ChangePasswordAtNextLogin
        {
            get
            {
                return this.changePasswordAtNextLoginField;
            }
            set
            {
                this.changePasswordAtNextLoginField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=6)]
        public bool IsDualCommitUser
        {
            get
            {
                return this.isDualCommitUserField;
            }
            set
            {
                this.isDualCommitUserField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=7)]
        public string PrimaryEmail
        {
            get
            {
                return this.primaryEmailField;
            }
            set
            {
                this.primaryEmailField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=8)]
        public string Color
        {
            get
            {
                return this.colorField;
            }
            set
            {
                this.colorField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true, Order=9)]
        public System.Nullable<bool> AllowInactivityExpiration
        {
            get
            {
                return this.allowInactivityExpirationField;
            }
            set
            {
                this.allowInactivityExpirationField = value;
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.1.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="AddAttachment", WrapperNamespace="urn:com:esi911:webeoc7:api:1.0", IsWrapped=true)]
    public partial class AddAttachmentRequest
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:com:esi911:webeoc7:api:1.0", Order=0)]
        public WebEOC_API.WebEOCCredentials credentials;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:com:esi911:webeoc7:api:1.0", Order=1)]
        public string BoardName;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:com:esi911:webeoc7:api:1.0", Order=2)]
        public string InputViewName;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:com:esi911:webeoc7:api:1.0", Order=3)]
        public string AttachmentFieldName;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:com:esi911:webeoc7:api:1.0", Order=4)]
        public int DataId;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:com:esi911:webeoc7:api:1.0", Order=5)]
        [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")]
        public byte[] AttachmentFileData;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:com:esi911:webeoc7:api:1.0", Order=6)]
        public string AttachmentFileName;
        
        public AddAttachmentRequest()
        {
        }
        
        public AddAttachmentRequest(WebEOC_API.WebEOCCredentials credentials, string BoardName, string InputViewName, string AttachmentFieldName, int DataId, byte[] AttachmentFileData, string AttachmentFileName)
        {
            this.credentials = credentials;
            this.BoardName = BoardName;
            this.InputViewName = InputViewName;
            this.AttachmentFieldName = AttachmentFieldName;
            this.DataId = DataId;
            this.AttachmentFileData = AttachmentFileData;
            this.AttachmentFileName = AttachmentFileName;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.1.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="AddAttachmentResponse", WrapperNamespace="urn:com:esi911:webeoc7:api:1.0", IsWrapped=true)]
    public partial class AddAttachmentResponse
    {
        
        public AddAttachmentResponse()
        {
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.1.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="urn:com:esi911:webeoc7:api:1.0")]
    public partial class GetListsResponseGetListsResult
    {
        
        private System.Xml.XmlElement[] anyField;
        
        private System.Xml.XmlElement any1Field;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyElementAttribute(Namespace="http://www.w3.org/2001/XMLSchema", Order=0)]
        public System.Xml.XmlElement[] Any
        {
            get
            {
                return this.anyField;
            }
            set
            {
                this.anyField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyElementAttribute(Namespace="urn:schemas-microsoft-com:xml-diffgram-v1", Order=1)]
        public System.Xml.XmlElement Any1
        {
            get
            {
                return this.any1Field;
            }
            set
            {
                this.any1Field = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.1.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="urn:com:esi911:webeoc7:api:1.0")]
    public partial class GetListItemsResponseGetListItemsResult
    {
        
        private System.Xml.XmlElement[] anyField;
        
        private System.Xml.XmlElement any1Field;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyElementAttribute(Namespace="http://www.w3.org/2001/XMLSchema", Order=0)]
        public System.Xml.XmlElement[] Any
        {
            get
            {
                return this.anyField;
            }
            set
            {
                this.anyField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyElementAttribute(Namespace="urn:schemas-microsoft-com:xml-diffgram-v1", Order=1)]
        public System.Xml.XmlElement Any1
        {
            get
            {
                return this.any1Field;
            }
            set
            {
                this.any1Field = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.1.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="urn:com:esi911:webeoc7:api:1.0")]
    public partial class GetListItemsByListNameResponseGetListItemsByListNameResult
    {
        
        private System.Xml.XmlElement[] anyField;
        
        private System.Xml.XmlElement any1Field;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyElementAttribute(Namespace="http://www.w3.org/2001/XMLSchema", Order=0)]
        public System.Xml.XmlElement[] Any
        {
            get
            {
                return this.anyField;
            }
            set
            {
                this.anyField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyElementAttribute(Namespace="urn:schemas-microsoft-com:xml-diffgram-v1", Order=1)]
        public System.Xml.XmlElement Any1
        {
            get
            {
                return this.any1Field;
            }
            set
            {
                this.any1Field = value;
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.1.0")]
    public interface APISoapChannel : WebEOC_API.APISoap, System.ServiceModel.IClientChannel
    {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.1.0")]
    public partial class APISoapClient : System.ServiceModel.ClientBase<WebEOC_API.APISoap>, WebEOC_API.APISoap
    {
        
        /// <summary>
        /// Implement this partial method to configure the service endpoint.
        /// </summary>
        /// <param name="serviceEndpoint">The endpoint to configure</param>
        /// <param name="clientCredentials">The client credentials</param>
        static partial void ConfigureEndpoint(System.ServiceModel.Description.ServiceEndpoint serviceEndpoint, System.ServiceModel.Description.ClientCredentials clientCredentials);
        
        public APISoapClient(EndpointConfiguration endpointConfiguration) : 
                base(APISoapClient.GetBindingForEndpoint(endpointConfiguration), APISoapClient.GetEndpointAddress(endpointConfiguration))
        {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public APISoapClient(EndpointConfiguration endpointConfiguration, string remoteAddress) : 
                base(APISoapClient.GetBindingForEndpoint(endpointConfiguration), new System.ServiceModel.EndpointAddress(remoteAddress))
        {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public APISoapClient(EndpointConfiguration endpointConfiguration, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(APISoapClient.GetBindingForEndpoint(endpointConfiguration), remoteAddress)
        {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public APISoapClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress)
        {
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<WebEOC_API.AddAttachmentResponse> WebEOC_API.APISoap.AddAttachmentAsync(WebEOC_API.AddAttachmentRequest request)
        {
            return base.Channel.AddAttachmentAsync(request);
        }
        
        public System.Threading.Tasks.Task<WebEOC_API.AddAttachmentResponse> AddAttachmentAsync(WebEOC_API.WebEOCCredentials credentials, string BoardName, string InputViewName, string AttachmentFieldName, int DataId, byte[] AttachmentFileData, string AttachmentFileName)
        {
            WebEOC_API.AddAttachmentRequest inValue = new WebEOC_API.AddAttachmentRequest();
            inValue.credentials = credentials;
            inValue.BoardName = BoardName;
            inValue.InputViewName = InputViewName;
            inValue.AttachmentFieldName = AttachmentFieldName;
            inValue.DataId = DataId;
            inValue.AttachmentFileData = AttachmentFileData;
            inValue.AttachmentFileName = AttachmentFileName;
            return ((WebEOC_API.APISoap)(this)).AddAttachmentAsync(inValue);
        }
        
        public System.Threading.Tasks.Task RemoveAttachmentAsync(WebEOC_API.WebEOCCredentials credentials, string BoardName, string InputViewName, string AttachmentFieldName, int DataId)
        {
            return base.Channel.RemoveAttachmentAsync(credentials, BoardName, InputViewName, AttachmentFieldName, DataId);
        }
        
        public System.Threading.Tasks.Task<string[]> GetPositionsAsync(WebEOC_API.WebEOCCredentials credentials)
        {
            return base.Channel.GetPositionsAsync(credentials);
        }
        
        public System.Threading.Tasks.Task<string[]> GetUserPositionsAsync(WebEOC_API.WebEOCCredentials credentials)
        {
            return base.Channel.GetUserPositionsAsync(credentials);
        }
        
        public System.Threading.Tasks.Task<WebEOC_API.WebEOCUser[]> GetUsersByPositionAsync(WebEOC_API.WebEOCCredentials credentials, string PositionName)
        {
            return base.Channel.GetUsersByPositionAsync(credentials, PositionName);
        }
        
        public System.Threading.Tasks.Task<string[]> GetPositionsForUserAsync(WebEOC_API.WebEOCCredentials credentials, string UserName)
        {
            return base.Channel.GetPositionsForUserAsync(credentials, UserName);
        }
        
        public System.Threading.Tasks.Task AddUserAsync(WebEOC_API.WebEOCCredentials credentials, WebEOC_API.WebEOCUser UserToAdd, string Password)
        {
            return base.Channel.AddUserAsync(credentials, UserToAdd, Password);
        }
        
        public System.Threading.Tasks.Task AddUserToPositionAsync(WebEOC_API.WebEOCCredentials credentials, string UserName, string Position)
        {
            return base.Channel.AddUserToPositionAsync(credentials, UserName, Position);
        }
        
        public System.Threading.Tasks.Task RemoveUserFromPositionAsync(WebEOC_API.WebEOCCredentials credentials, string UserName, string Position)
        {
            return base.Channel.RemoveUserFromPositionAsync(credentials, UserName, Position);
        }
        
        public System.Threading.Tasks.Task<bool> DeleteUserIfNoPositionsAsync(WebEOC_API.WebEOCCredentials credentials, string UserName)
        {
            return base.Channel.DeleteUserIfNoPositionsAsync(credentials, UserName);
        }
        
        public System.Threading.Tasks.Task DeleteUserAsync(WebEOC_API.WebEOCCredentials credentials, string UserName)
        {
            return base.Channel.DeleteUserAsync(credentials, UserName);
        }
        
        public System.Threading.Tasks.Task<string[]> GetBoardNamesAsync(WebEOC_API.WebEOCCredentials credentials)
        {
            return base.Channel.GetBoardNamesAsync(credentials);
        }
        
        public System.Threading.Tasks.Task<string[]> GetInputViewsAsync(WebEOC_API.WebEOCCredentials credentials, string BoardName)
        {
            return base.Channel.GetInputViewsAsync(credentials, BoardName);
        }
        
        public System.Threading.Tasks.Task<string[]> GetDisplayViewsAsync(WebEOC_API.WebEOCCredentials credentials, string BoardName)
        {
            return base.Channel.GetDisplayViewsAsync(credentials, BoardName);
        }
        
        public System.Threading.Tasks.Task<WebEOC_API.MobileForm[]> GetMobileFormsAsync(WebEOC_API.WebEOCCredentials credentials)
        {
            return base.Channel.GetMobileFormsAsync(credentials);
        }
        
        public System.Threading.Tasks.Task<string[]> GetViewFieldsAsync(WebEOC_API.WebEOCCredentials credentials, string BoardName, string ViewName)
        {
            return base.Channel.GetViewFieldsAsync(credentials, BoardName, ViewName);
        }
        
        public System.Threading.Tasks.Task<string[]> GetUserNamesAsync(WebEOC_API.WebEOCCredentials credentials)
        {
            return base.Channel.GetUserNamesAsync(credentials);
        }
        
        public System.Threading.Tasks.Task<WebEOC_API.WebEOCUser> GetUserAsync(WebEOC_API.WebEOCCredentials credentials, string userName)
        {
            return base.Channel.GetUserAsync(credentials, userName);
        }
        
        public System.Threading.Tasks.Task EditUserAsync(WebEOC_API.WebEOCCredentials credentials, WebEOC_API.WebEOCUser webeocUser)
        {
            return base.Channel.EditUserAsync(credentials, webeocUser);
        }
        
        public System.Threading.Tasks.Task LockUnlockUserAsync(WebEOC_API.WebEOCCredentials credentials, string username, bool locked)
        {
            return base.Channel.LockUnlockUserAsync(credentials, username, locked);
        }
        
        public System.Threading.Tasks.Task<string[]> GetGroupNamesAsync(WebEOC_API.WebEOCCredentials credentials)
        {
            return base.Channel.GetGroupNamesAsync(credentials);
        }
        
        public System.Threading.Tasks.Task<WebEOC_API.WebEOCGroup> GetGroupAsync(WebEOC_API.WebEOCCredentials credentials, string groupName)
        {
            return base.Channel.GetGroupAsync(credentials, groupName);
        }
        
        public System.Threading.Tasks.Task AddGroupAsync(WebEOC_API.WebEOCCredentials credentials, WebEOC_API.WebEOCGroup groupToAdd)
        {
            return base.Channel.AddGroupAsync(credentials, groupToAdd);
        }
        
        public System.Threading.Tasks.Task EditGroupAsync(WebEOC_API.WebEOCCredentials credentials, WebEOC_API.WebEOCGroup groupToEdit)
        {
            return base.Channel.EditGroupAsync(credentials, groupToEdit);
        }
        
        public System.Threading.Tasks.Task DeleteGroupAsync(WebEOC_API.WebEOCCredentials credentials, string groupNameToDelete)
        {
            return base.Channel.DeleteGroupAsync(credentials, groupNameToDelete);
        }
        
        public System.Threading.Tasks.Task<int> AddDataAsync(WebEOC_API.WebEOCCredentials credentials, string BoardName, string InputViewName, string XmlData)
        {
            return base.Channel.AddDataAsync(credentials, BoardName, InputViewName, XmlData);
        }
        
        public System.Threading.Tasks.Task<int> UpdateDataAsync(WebEOC_API.WebEOCCredentials credentials, string BoardName, string InputViewName, string XmlData, int DataId)
        {
            return base.Channel.UpdateDataAsync(credentials, BoardName, InputViewName, XmlData, DataId);
        }
        
        public System.Threading.Tasks.Task<int[]> UpdateDataBatchAsync(WebEOC_API.WebEOCCredentials credentials, string BoardName, string InputViewName, string XmlData)
        {
            return base.Channel.UpdateDataBatchAsync(credentials, BoardName, InputViewName, XmlData);
        }
        
        public System.Threading.Tasks.Task<int> AddRelatedDataAsync(WebEOC_API.WebEOCCredentials credentials, string BoardName, string InputViewName, string XmlData, string RelatedTable, int RelatedDataId)
        {
            return base.Channel.AddRelatedDataAsync(credentials, BoardName, InputViewName, XmlData, RelatedTable, RelatedDataId);
        }
        
        public System.Threading.Tasks.Task<int> UpdateRelatedDataAsync(WebEOC_API.WebEOCCredentials credentials, string BoardName, string InputViewName, string XmlData, string RelatedTable, int RelatedDataId, int DataId)
        {
            return base.Channel.UpdateRelatedDataAsync(credentials, BoardName, InputViewName, XmlData, RelatedTable, RelatedDataId, DataId);
        }
        
        public System.Threading.Tasks.Task<WebEOC_API.FileAttachment> GetAttachmentAsync(WebEOC_API.WebEOCCredentials credentials, string boardName, string displayViewName, string attachmentFieldName, int dataId)
        {
            return base.Channel.GetAttachmentAsync(credentials, boardName, displayViewName, attachmentFieldName, dataId);
        }
        
        public System.Threading.Tasks.Task<string> GetDataAsync(WebEOC_API.WebEOCCredentials credentials, string BoardName, string DisplayViewName)
        {
            return base.Channel.GetDataAsync(credentials, BoardName, DisplayViewName);
        }
        
        public System.Threading.Tasks.Task<string> GetFilteredDataAsync(WebEOC_API.WebEOCCredentials credentials, string BoardName, string DisplayViewName, string[] ViewFilterNames, string XmlUserFilter)
        {
            return base.Channel.GetFilteredDataAsync(credentials, BoardName, DisplayViewName, ViewFilterNames, XmlUserFilter);
        }
        
        public System.Threading.Tasks.Task<string> GetFilteredDataV2Async(WebEOC_API.WebEOCCredentials credentials, string BoardName, string DisplayViewName, string[] ViewFilterNames, string XmlUserFilter, WebEOC_API.CustomFilter CustomFilter)
        {
            return base.Channel.GetFilteredDataV2Async(credentials, BoardName, DisplayViewName, ViewFilterNames, XmlUserFilter, CustomFilter);
        }
        
        public System.Threading.Tasks.Task<string> GetUpdatedDataAsync(WebEOC_API.WebEOCCredentials credentials, string BoardName, string DisplayViewName, System.DateTime UpdatedTime)
        {
            return base.Channel.GetUpdatedDataAsync(credentials, BoardName, DisplayViewName, UpdatedTime);
        }
        
        public System.Threading.Tasks.Task<string> GetDataByDataIdAsync(WebEOC_API.WebEOCCredentials credentials, string BoardName, string DisplayViewName, int DataId)
        {
            return base.Channel.GetDataByDataIdAsync(credentials, BoardName, DisplayViewName, DataId);
        }
        
        public System.Threading.Tasks.Task<string> PingAsync(WebEOC_API.WebEOCCredentials credentials)
        {
            return base.Channel.PingAsync(credentials);
        }
        
        public System.Threading.Tasks.Task PostStandardDataAsync(WebEOC_API.WebEOCCredentials credentials, string XmlStandardData)
        {
            return base.Channel.PostStandardDataAsync(credentials, XmlStandardData);
        }
        
        public System.Threading.Tasks.Task<string[]> GetIncidentsAsync(WebEOC_API.WebEOCCredentials credentials)
        {
            return base.Channel.GetIncidentsAsync(credentials);
        }
        
        public System.Threading.Tasks.Task AddIncidentAsync(WebEOC_API.WebEOCCredentials credentials, string IncidentName, System.DateTime IncidentDateTime, bool Default)
        {
            return base.Channel.AddIncidentAsync(credentials, IncidentName, IncidentDateTime, Default);
        }
        
        public System.Threading.Tasks.Task<WebEOC_API.GetListsResponseGetListsResult> GetListsAsync(WebEOC_API.WebEOCCredentials credentials)
        {
            return base.Channel.GetListsAsync(credentials);
        }
        
        public System.Threading.Tasks.Task<WebEOC_API.GetListItemsResponseGetListItemsResult> GetListItemsAsync(WebEOC_API.WebEOCCredentials credentials, int listId)
        {
            return base.Channel.GetListItemsAsync(credentials, listId);
        }
        
        public System.Threading.Tasks.Task<WebEOC_API.GetListItemsByListNameResponseGetListItemsByListNameResult> GetListItemsByListNameAsync(WebEOC_API.WebEOCCredentials credentials, string listName)
        {
            return base.Channel.GetListItemsByListNameAsync(credentials, listName);
        }
        
        public System.Threading.Tasks.Task<int> SaveListAsync(WebEOC_API.WebEOCCredentials credentials, int listId, string listName)
        {
            return base.Channel.SaveListAsync(credentials, listId, listName);
        }
        
        public System.Threading.Tasks.Task DeleteListAsync(WebEOC_API.WebEOCCredentials credentials, int listId)
        {
            return base.Channel.DeleteListAsync(credentials, listId);
        }
        
        public System.Threading.Tasks.Task<int> SaveListItemAsync(WebEOC_API.WebEOCCredentials credentials, int listId, int listItemId, string listItemName, string listItemColor)
        {
            return base.Channel.SaveListItemAsync(credentials, listId, listItemId, listItemName, listItemColor);
        }
        
        public System.Threading.Tasks.Task DeleteListItemAsync(WebEOC_API.WebEOCCredentials credentials, int listItemId)
        {
            return base.Channel.DeleteListItemAsync(credentials, listItemId);
        }
        
        public virtual System.Threading.Tasks.Task OpenAsync()
        {
            return System.Threading.Tasks.Task.Factory.FromAsync(((System.ServiceModel.ICommunicationObject)(this)).BeginOpen(null, null), new System.Action<System.IAsyncResult>(((System.ServiceModel.ICommunicationObject)(this)).EndOpen));
        }
        
        private static System.ServiceModel.Channels.Binding GetBindingForEndpoint(EndpointConfiguration endpointConfiguration)
        {
            if ((endpointConfiguration == EndpointConfiguration.APISoap))
            {
                System.ServiceModel.BasicHttpBinding result = new System.ServiceModel.BasicHttpBinding();
                result.MaxBufferSize = int.MaxValue;
                result.ReaderQuotas = System.Xml.XmlDictionaryReaderQuotas.Max;
                result.MaxReceivedMessageSize = int.MaxValue;
                result.AllowCookies = true;
                result.Security.Mode = System.ServiceModel.BasicHttpSecurityMode.Transport;
                return result;
            }
            if ((endpointConfiguration == EndpointConfiguration.APISoap12))
            {
                System.ServiceModel.Channels.CustomBinding result = new System.ServiceModel.Channels.CustomBinding();
                System.ServiceModel.Channels.TextMessageEncodingBindingElement textBindingElement = new System.ServiceModel.Channels.TextMessageEncodingBindingElement();
                textBindingElement.MessageVersion = System.ServiceModel.Channels.MessageVersion.CreateVersion(System.ServiceModel.EnvelopeVersion.Soap12, System.ServiceModel.Channels.AddressingVersion.None);
                result.Elements.Add(textBindingElement);
                System.ServiceModel.Channels.HttpsTransportBindingElement httpsBindingElement = new System.ServiceModel.Channels.HttpsTransportBindingElement();
                httpsBindingElement.AllowCookies = true;
                httpsBindingElement.MaxBufferSize = int.MaxValue;
                httpsBindingElement.MaxReceivedMessageSize = int.MaxValue;
                result.Elements.Add(httpsBindingElement);
                return result;
            }
            throw new System.InvalidOperationException(string.Format("Could not find endpoint with name \'{0}\'.", endpointConfiguration));
        }
        
        private static System.ServiceModel.EndpointAddress GetEndpointAddress(EndpointConfiguration endpointConfiguration)
        {
            if ((endpointConfiguration == EndpointConfiguration.APISoap))
            {
                return new System.ServiceModel.EndpointAddress("https://eoc.atlascrisis.com/DEV/api.asmx");
            }
            if ((endpointConfiguration == EndpointConfiguration.APISoap12))
            {
                return new System.ServiceModel.EndpointAddress("https://eoc.atlascrisis.com/DEV/api.asmx");
            }
            throw new System.InvalidOperationException(string.Format("Could not find endpoint with name \'{0}\'.", endpointConfiguration));
        }
        
        public enum EndpointConfiguration
        {
            
            APISoap,
            
            APISoap12,
        }
    }
}
